{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","reject","addEventListener","e","nodeName","id","printMessage","message","newDiv","document","createElement","classList","add","innerHTML","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BJ,EAAQK,iBAAiBJ,EAAW,SAACK,GACnCH,EAAkBF,UAAAA,OAAAA,EACfD,6BAAAA,OAAAA,EAAQO,SAAiBP,UAAAA,OAAAA,EAAQQ,SAK1C,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAASC,SAASC,cAAc,OAEtCF,EAAOG,UAAUC,IAAI,WACrBJ,EAAOK,UAAYN,EACnBE,SAASK,KAAKC,OAAOP,IAGvBQ,OAAOC,QAAU,CACfrB,QAAAA,EACAU,aAAAA","file":"main.a446f51a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise((resolve, reject) => {\n    element.addEventListener(eventName, (e) => {\n      resolve(`It was ${eventName} on the element:\n       ${element.nodeName}, id: ${element.id}`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const newDiv = document.createElement('div');\n\n  newDiv.classList.add('message');\n  newDiv.innerHTML = message;\n  document.body.append(newDiv);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}